/*

  Коллекции
  =========
    
    а) List
    б) Set
    в) Map
  
  1) List = индексированная упорядоченная группа объектов (массив)
    - определять (пустой, с данными)
    - добавлять (элемент, другой список)
    - удалять (по элементу, по индексу)
    - сортировать (по возростание, по убывание, по функции)
    - искать (по значению, по индексу)
      первый индекс = 0
      последний список = length - 1
      
      https://t.ly/rCzA (основные методы списков)
      https://t.ly/rCzA (основные методы списков)
      https://t.ly/rCzA (основные методы списков)
      
      https://metanit.com/dart/tutorial/1.1.php (хороший учебник)
      https://metanit.com/dart/tutorial/1.1.php (хороший учебник)
      https://metanit.com/dart/tutorial/1.1.php (хороший учебник)
      
  2) Фиксированный List
    - нельзя изменять длину
    - нельзя изменять элементы
    
  3) Внутри списков можно использовать условия (операторы)
    if (s2.length > 2) ...s2 = добавить список в список, если длина s2 > 2
    for (int i in d1) i*i = создать список из квадратов другого списка

*/

void main() {
  
  var numbers1 = [];                 // пустой массив
  print(numbers1);                   // вывод на экран
  print(numbers1.length);            // длина = 0
  print(numbers1.isEmpty);           // isEmpty = true
  
  var numbers2 = [1,2,3,4,5,6,7,8];  // заполненный массив
  print(numbers2);                   // вывод на экран 
  print(numbers2.length);            // длина = 8
  print(numbers2.isEmpty);           // isEmpty = false
  numbers2.add(10);                  // добавить 10
  print(numbers2);                   // [1, 2, 3, 4, 5, 6, 7, 8, 10]
  
  var n1 = [1,2,3];                  // [1,2,3]
  var n2 = [7,8,9];                  // [7,8,9]
  n2.addAll(n1);                     // [7,8,9,1,2,3]
  print(n2);                         // n2 = n2 + n1
  
  numbers2.remove(1);                // удалить элемент = 2
  print(numbers2);                   // вывести на экран
  numbers2.removeAt(3);              // удалить элемент с индексом = 3 (5)
  print(numbers2);                   // вывести на экран
  
  print("");
  var mylist = [1,2,3,4,5,6,7,8];
  var mylist1 = [-3,-2,10];
  print("Mylist = $mylist");
  print(mylist.getRange(1,3));       // вернуть с 1-го по 3-ий (2,3)
  print(mylist.indexOf(5));          // поиск индекса первого вхождения 5 (4)
  mylist.addAll(mylist1);            // mylist = mylist + mylist1
  print(mylist);                     // [1, 2, 3, 4, 5, 6, 7, 8, -3, -2, 10]
  mylist.sort();                     // отсортировать по возростанию  
  print(mylist);                     // вывести на экран  
  
  // История про table.concat() для сайта экзорцизм
  // Поиск в списке {1,2,3,4,5,6,7,8,} подсписка {3,4,5}
  
  print("");
  print(n2);                         // [7, 8, 9, 1, 2, 3]
  print(n2[0]);                      // первый (нулевой!) элемент = 7
  print(n2[n2.length-1]);            // последний (длина-1) элемент = 3
  n2[2] = 100;                       // 2-ой элемент (9) = 100
  print(n2);                         // [7, 8, 100, 1, 2, 3]

  var fix = List.filled(4,2);        // фиксированный список [2,2,2,2]
  print(fix);                        // вывести на экран   
  var fix2 = List.filled(5,null);    // фиксированный список [null, null, null, null, null]
  print(fix2);                       // вывести на экран
  var fix3 = List.filled(3,[1,2,3]); // фиксированный список из [1,2,3]
  print(fix3);                       // [[1, 2, 3], [1, 2, 3], [1, 2, 3]]
  
  var r1 = [1,2,3];
  var r2 = [4,5,6];
  var r3 = [-100, -200, ...r1, 10, 11, 12, ...r2];    // [-100, -200, 1, 2, 3, 10, 11, 12, 4, 5, 6]  
  print(r3);                                          
  
  var t1;                                             // внимательно к элементам типа null
  var t2 = [1,2,3];                                   // [1,2,3]
  // var t3 = [10, 11, ...t1, 12, 13, ...t2];
  var t3 = [10, 11, ...?t1, 12, 13, ...t2];             
  print(t3);                                          // [10, 11, 12, 13, 1, 2, 3]  
  
  var s1 = [1,2,3];
  var s2 = [10,11,12];
  var s3 = [...s1, if (s2.length > 2) ...s2];         // s1 + s2 (если #s2>2)
  print(s3);
  var s4 = [if (s1.length > 2) ...s1 else ...s2];     // s1 (если #s1>2), иначе s2
  print(s4);
  
  var d1 = [1,2,3,4,5,6,7,8];
  var d2 = [for(var i in d1) i*i];                    // пройти по d1 и делать квадраты
  print(d2);

}